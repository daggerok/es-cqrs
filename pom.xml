<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0"
         xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
         xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">

  <parent>
    <groupId>org.springframework.boot</groupId>
    <artifactId>spring-boot-starter-parent</artifactId>
    <version>2.1.2.RELEASE</version>
    <relativePath/> <!-- lookup parent from repository -->
  </parent>

  <modelVersion>4.0.0</modelVersion>
  <description>ES/CQRS modules</description>
  <groupId>com.github.daggerok.es</groupId>
  <artifactId>es-cqrs</artifactId>
  <version>1.0.0-SNAPSHOT</version>
  <packaging>pom</packaging>

  <modules>
    <module>es-cqrs-api</module>
    <module>es-cqrs-command</module>
    <module>es-cqrs-h2</module>
    <module>es-cqrs-example</module>
  </modules>

  <properties>
    <java.version>1.8</java.version>
    <maven.compiler.source>${java.version}</maven.compiler.source>
    <maven.compiler.target>${java.version}</maven.compiler.target>

    <encoding>UTF-8</encoding>
    <archetype.encoding>${encoding}</archetype.encoding>
    <project.build.sourceEncoding>${encoding}</project.build.sourceEncoding>
    <project.reporting.outputEncoding>${encoding}</project.reporting.outputEncoding>
    <project.resources.outputEncoding>${encoding}</project.resources.outputEncoding>

    <java.version>1.8</java.version>
    <kotlin.version>1.3.21</kotlin.version>
  </properties>

  <dependencyManagement>
    <dependencies>
      <dependency>
        <groupId>com.github.daggerok.es.api</groupId>
        <artifactId>es-cqrs-api</artifactId>
        <version>${project.version}</version>
      </dependency>
      <dependency>
        <groupId>com.github.daggerok.es.command</groupId>
        <artifactId>es-cqrs-command</artifactId>
        <version>${project.version}</version>
      </dependency>
      <dependency>
        <groupId>com.github.daggerok.es.h2</groupId>
        <artifactId>es-cqrs-h2</artifactId>
        <version>${project.version}</version>
      </dependency>
      <dependency>
        <groupId>com.github.daggerok.es.example</groupId>
        <artifactId>es-cqrs-example</artifactId>
        <version>${project.version}</version>
      </dependency>

      <dependency>
        <groupId>com.h2database</groupId>
        <artifactId>h2</artifactId>
        <version>1.4.197</version>
      </dependency>
    </dependencies>
  </dependencyManagement>

  <dependencies>
    <dependency>
      <groupId>org.springframework.boot</groupId>
      <artifactId>spring-boot-starter</artifactId>
    </dependency>
    <dependency>
      <groupId>org.jetbrains.kotlin</groupId>
      <artifactId>kotlin-reflect</artifactId>
    </dependency>
    <dependency>
      <groupId>org.jetbrains.kotlin</groupId>
      <artifactId>kotlin-stdlib-jdk8</artifactId>
    </dependency>

    <dependency>
      <groupId>org.springframework.boot</groupId>
      <artifactId>spring-boot-configuration-processor</artifactId>
      <optional>true</optional>
    </dependency>
    <dependency>
      <groupId>org.projectlombok</groupId>
      <artifactId>lombok</artifactId>
      <optional>true</optional>
      <scope>provided</scope>
    </dependency>
    <dependency>
      <groupId>org.springframework.boot</groupId>
      <artifactId>spring-boot-starter-test</artifactId>
      <scope>test</scope>
    </dependency>
  </dependencies>

  <build>
    <defaultGoal>clean package</defaultGoal>

    <pluginManagement>
      <plugins>
        <plugin>
          <groupId>org.springframework.boot</groupId>
          <artifactId>spring-boot-maven-plugin</artifactId>
        </plugin>
      </plugins>
    </pluginManagement>

    <plugins>
      <plugin>
        <groupId>org.jetbrains.kotlin</groupId>
        <artifactId>kotlin-maven-plugin</artifactId>
        <configuration>
          <args>
            <arg>-Xjsr305=strict</arg>
          </args>
          <compilerPlugins>
            <plugin>spring</plugin>
          </compilerPlugins>
        </configuration>
        <executions>
          <execution>
            <id>compile</id>
            <goals>
              <goal>compile</goal>
            </goals>
            <configuration>
              <sourceDirs>
                <sourceDir>${project.basedir}/src/main/kotlin</sourceDir>
                <sourceDir>${project.basedir}/src/main/java</sourceDir>
              </sourceDirs>
            </configuration>
          </execution>
          <execution>
            <id>test-compile</id>
            <goals>
              <goal>test-compile</goal>
            </goals>
            <configuration>
              <sourceDirs>
                <sourceDir>${project.basedir}/src/test/kotlin</sourceDir>
                <sourceDir>${project.basedir}/src/test/java</sourceDir>
              </sourceDirs>
            </configuration>
          </execution>
        </executions>
        <dependencies>
          <dependency>
            <groupId>org.jetbrains.kotlin</groupId>
            <artifactId>kotlin-maven-allopen</artifactId>
            <version>${kotlin.version}</version>
          </dependency>
        </dependencies>
      </plugin>

      <plugin>
        <groupId>org.codehaus.mojo</groupId>
        <artifactId>versions-maven-plugin</artifactId>
        <version>2.7</version>
        <configuration>
          <generateBackupPoms>false</generateBackupPoms>
          <allowSnapshots>true</allowSnapshots>
          <allowIncrementalUpdates>true</allowIncrementalUpdates>
          <excludeReactor>false</excludeReactor>
        </configuration>
      </plugin>

      <plugin>
        <groupId>org.apache.maven.plugins</groupId>
        <artifactId>maven-release-plugin</artifactId>
        <version>2.5.3</version>
        <configuration>
          <tagNameFormat>v@{project.version}</tagNameFormat>
          <autoVersionSubmodules>true</autoVersionSubmodules>
          <!-- releaseProfiles configuration will actually force a Maven profile
            – the `releases` profile – to become active during the Release process. -->
          <goals>install</goals><!-- just don't deploy... -->
        </configuration>
      </plugin>
    </plugins>
  </build>

  <scm>
    <url>https://github.com/daggerok/es-cqrs.git</url>
    <connection>scm:git:https://github.com/daggerok/es-cqrs.git</connection>
    <developerConnection>scm:git:git@github.com:daggerok/es-cqrs.git</developerConnection>
    <!--<tag>HEAD</tag>-->
    <tag>master</tag>
  </scm>

  <developers>
    <developer>
      <name>Maksim Kostromin</name>
      <email>daggerok@gmail.com</email>
    </developer>
  </developers>

  <profiles>
    <profile>
      <id>local-deploy</id>
      <build><!-- ./mvnw -P local-deploy -->
        <defaultGoal>clean deploy</defaultGoal>
      </build>
      <distributionManagement>
        <repository>
          <id>local-maven-repository</id>
          <url>file://${maven.multiModuleProjectDirectory}/target/.m2/repository</url>
        </repository>
      </distributionManagement>
    </profile>

    <profile>
      <id>github-maven-repository</id>
      <build><!-- ./mvnw -P github-maven-repository -pl :es-cqrs -->
        <defaultGoal>scm-publish:publish-scm</defaultGoal>
        <plugins>
          <plugin>
            <groupId>org.apache.maven.plugins</groupId>
            <artifactId>maven-scm-publish-plugin</artifactId>
            <version>3.0.0</version>
            <configuration>
              <content>${maven.multiModuleProjectDirectory}/target/.m2/repository/</content>
              <!--<includes>**/*.*</includes>-->
              <scmBranch>maven</scmBranch>
              <tryUpdate>true</tryUpdate>
            </configuration>
          </plugin>
        </plugins>
      </build>
      <distributionManagement>
        <site>
          <id>daggerok-es-cqrs</id>
          <url>scm:git:git@github.com:daggerok/es-cqrs.git</url>
        </site>
      </distributionManagement>
    </profile>

    <profile>
      <id>create-github-release</id>
      <build><!-- publish local maven artifacts (mvn deploy) from target/.m2/repository folder to github
                  ./mvnw -P create-github-release -pl :es-cqrs                                                   -->
        <defaultGoal>de.jutzig:github-release-plugin:1.1.1:release</defaultGoal>
        <plugins>
          <plugin>
            <groupId>de.jutzig</groupId>
            <artifactId>github-release-plugin</artifactId>
            <version>1.2.0</version>
            <executions>
              <execution>
                <id>release</id>
                <phase>deploy</phase>
              </execution>
            </executions>
            <configuration>
              <overwriteArtifact>true</overwriteArtifact>
              <description>${project.artifactId} release</description>
              <releaseName>v${project.version}</releaseName>
              <tag>${project.version}</tag>
              <fileSets>
                <fileSet>
                  <directory>${maven.multiModuleProjectDirectory}</directory>
                  <includes><include>**/*.md</include></includes>
                </fileSet>
                <fileSet>
                  <directory>${maven.multiModuleProjectDirectory}/es-cqrs-example/target</directory>
                  <includes>
                    <include>*.jar</include>
                  </includes>
                </fileSet><!--
                <fileSet>
                  <directory>${maven.multiModuleProjectDirectory}/target/.m2/repository</directory>
                  <includes>
                    <include>**/*.jar*</include>
                    <include>**/*.pom*</include>
                  </includes>
                </fileSet>-->
              </fileSets>
            </configuration>
          </plugin>
        </plugins>
      </build>
    </profile>
  </profiles>

</project>
